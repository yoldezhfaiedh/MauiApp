@page "/NOo"
@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject AuthenticationViewModel ViewModel

<EditForm Model="@model" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="model.Email" class="form-control" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>
    <div class="form-group">
        <label>Mot de passe</label>
        <InputText type="password" @bind-Value="model.Password" class="form-control" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Se connecter</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private LoginModel model = new();
    private string errorMessage = string.Empty;
    private bool isSuccess = false;

    private async Task HandleLogin()
    {
        try
        {
            ViewModel.Email = model.Email;
            ViewModel.Password = model.Password;

            var result = await ViewModel.LoginAsync();
            isSuccess = result.Success;

            if (isSuccess)
            {
                await ((CustomAuthStateProvider)AuthStateProvider)
                    .NotifyUserLoggedInAsync(ViewModel.Email, result.Role);

                await Task.Delay(50);
                Navigation.NavigateTo("/sign");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Une erreur s'est produite lors de la connexion";
            Console.WriteLine($"Erreur de connexion: {ex.Message}");
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "L'email est requis")]
        [EmailAddress(ErrorMessage = "Format d'email invalide")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Le mot de passe est requis")]
        public string Password { get; set; }
    }
}
